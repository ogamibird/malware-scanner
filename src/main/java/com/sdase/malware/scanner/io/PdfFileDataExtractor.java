package com.sdase.malware.scanner.io;

import com.sdase.malware.scanner.exception.FileDataExtractionException;
import com.sdase.malware.scanner.util.TextHelper;
import org.apache.pdfbox.Loader;
import org.apache.pdfbox.io.RandomAccessReadBuffer;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.springframework.core.io.Resource;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.util.MimeType;

import java.io.IOException;

@Component
public class PdfFileDataExtractor implements FileDataExtractor {

    @Override
    public boolean canHandleType(MimeType mimeType) {
        return MediaType.APPLICATION_PDF.equals(mimeType);
    }

    /*
     The current implementation only works if the content of
     the pdf file is selectable. If the data e.g. the ibans
     are inside images in the pdf or the pdf is a scanned document
     the following approach would not work. To recognize data in those
     documents the approach would need to extended by an OCR
     or AI approach.
     */
    @Override
    public String extract(Resource resource) {
        String pdfContent = loadPdfContent(resource);
        return TextHelper.removeControlChars(pdfContent);
    }

    private static String loadPdfContent(Resource resource) {
        try (PDDocument pdDocument = Loader.loadPDF(RandomAccessReadBuffer.createBufferFromStream(resource.getInputStream()))) {
            PDFTextStripper stripper = new PDFTextStripper();
            return stripper.getText(pdDocument);
        } catch (IOException e) {
            throw new FileDataExtractionException("Failed to load content of PDF-file.", e);
        }
    }
}
