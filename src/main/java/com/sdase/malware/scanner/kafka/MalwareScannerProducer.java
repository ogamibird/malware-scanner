package com.sdase.malware.scanner.kafka;

import com.sdase.malware.scanner.model.CheckRequestMessage;
import com.sdase.malware.scanner.model.CheckResult;
import com.sdase.malware.scanner.model.CheckResultMessage;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Component;

import java.util.List;

@Slf4j
@Component
@AllArgsConstructor
public class MalwareScannerProducer {

    private static final String RESPONSE_TOPIC = "scanResponses";
    private final KafkaTemplate<String, CheckResultMessage> kafkaTemplate;

    public void sendCheckResponse(List<CheckResult> checkResults, String requestService, String correlationId) {
        CheckResultMessage checkResultMessage = new CheckResultMessage();
        checkResultMessage.setCheckResults(checkResults);

        Message<CheckResultMessage> message = MessageBuilder.withPayload(checkResultMessage)
                                                            .setHeader(KafkaHeaders.TOPIC, RESPONSE_TOPIC)
                                                            .setHeader(CheckRequestMessage.HEADER_CORRELATION_ID, correlationId)
                                                            .setHeader(CheckRequestMessage.HEADER_REQUESTER_SERVICE, requestService)
                                                            .build();

        kafkaTemplate.send(message)
                     .exceptionally(throwable -> {
                         log.error("Failed to write scan result to kafka.", throwable);
                         return null;
                     });
    }
}
